// Code generated by MockGen. DO NOT EDIT.
// Source: ../scheduler.pb.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockisAnnouncePeerRequest_Request is a mock of isAnnouncePeerRequest_Request interface.
type MockisAnnouncePeerRequest_Request struct {
	ctrl     *gomock.Controller
	recorder *MockisAnnouncePeerRequest_RequestMockRecorder
}

// MockisAnnouncePeerRequest_RequestMockRecorder is the mock recorder for MockisAnnouncePeerRequest_Request.
type MockisAnnouncePeerRequest_RequestMockRecorder struct {
	mock *MockisAnnouncePeerRequest_Request
}

// NewMockisAnnouncePeerRequest_Request creates a new mock instance.
func NewMockisAnnouncePeerRequest_Request(ctrl *gomock.Controller) *MockisAnnouncePeerRequest_Request {
	mock := &MockisAnnouncePeerRequest_Request{ctrl: ctrl}
	mock.recorder = &MockisAnnouncePeerRequest_RequestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockisAnnouncePeerRequest_Request) EXPECT() *MockisAnnouncePeerRequest_RequestMockRecorder {
	return m.recorder
}

// isAnnouncePeerRequest_Request mocks base method.
func (m *MockisAnnouncePeerRequest_Request) isAnnouncePeerRequest_Request() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "isAnnouncePeerRequest_Request")
}

// isAnnouncePeerRequest_Request indicates an expected call of isAnnouncePeerRequest_Request.
func (mr *MockisAnnouncePeerRequest_RequestMockRecorder) isAnnouncePeerRequest_Request() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "isAnnouncePeerRequest_Request", reflect.TypeOf((*MockisAnnouncePeerRequest_Request)(nil).isAnnouncePeerRequest_Request))
}

// MockisAnnouncePeerRequest_Errordetails is a mock of isAnnouncePeerRequest_Errordetails interface.
type MockisAnnouncePeerRequest_Errordetails struct {
	ctrl     *gomock.Controller
	recorder *MockisAnnouncePeerRequest_ErrordetailsMockRecorder
}

// MockisAnnouncePeerRequest_ErrordetailsMockRecorder is the mock recorder for MockisAnnouncePeerRequest_Errordetails.
type MockisAnnouncePeerRequest_ErrordetailsMockRecorder struct {
	mock *MockisAnnouncePeerRequest_Errordetails
}

// NewMockisAnnouncePeerRequest_Errordetails creates a new mock instance.
func NewMockisAnnouncePeerRequest_Errordetails(ctrl *gomock.Controller) *MockisAnnouncePeerRequest_Errordetails {
	mock := &MockisAnnouncePeerRequest_Errordetails{ctrl: ctrl}
	mock.recorder = &MockisAnnouncePeerRequest_ErrordetailsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockisAnnouncePeerRequest_Errordetails) EXPECT() *MockisAnnouncePeerRequest_ErrordetailsMockRecorder {
	return m.recorder
}

// isAnnouncePeerRequest_Errordetails mocks base method.
func (m *MockisAnnouncePeerRequest_Errordetails) isAnnouncePeerRequest_Errordetails() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "isAnnouncePeerRequest_Errordetails")
}

// isAnnouncePeerRequest_Errordetails indicates an expected call of isAnnouncePeerRequest_Errordetails.
func (mr *MockisAnnouncePeerRequest_ErrordetailsMockRecorder) isAnnouncePeerRequest_Errordetails() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "isAnnouncePeerRequest_Errordetails", reflect.TypeOf((*MockisAnnouncePeerRequest_Errordetails)(nil).isAnnouncePeerRequest_Errordetails))
}

// MockisAnnouncePeerResponse_Response is a mock of isAnnouncePeerResponse_Response interface.
type MockisAnnouncePeerResponse_Response struct {
	ctrl     *gomock.Controller
	recorder *MockisAnnouncePeerResponse_ResponseMockRecorder
}

// MockisAnnouncePeerResponse_ResponseMockRecorder is the mock recorder for MockisAnnouncePeerResponse_Response.
type MockisAnnouncePeerResponse_ResponseMockRecorder struct {
	mock *MockisAnnouncePeerResponse_Response
}

// NewMockisAnnouncePeerResponse_Response creates a new mock instance.
func NewMockisAnnouncePeerResponse_Response(ctrl *gomock.Controller) *MockisAnnouncePeerResponse_Response {
	mock := &MockisAnnouncePeerResponse_Response{ctrl: ctrl}
	mock.recorder = &MockisAnnouncePeerResponse_ResponseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockisAnnouncePeerResponse_Response) EXPECT() *MockisAnnouncePeerResponse_ResponseMockRecorder {
	return m.recorder
}

// isAnnouncePeerResponse_Response mocks base method.
func (m *MockisAnnouncePeerResponse_Response) isAnnouncePeerResponse_Response() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "isAnnouncePeerResponse_Response")
}

// isAnnouncePeerResponse_Response indicates an expected call of isAnnouncePeerResponse_Response.
func (mr *MockisAnnouncePeerResponse_ResponseMockRecorder) isAnnouncePeerResponse_Response() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "isAnnouncePeerResponse_Response", reflect.TypeOf((*MockisAnnouncePeerResponse_Response)(nil).isAnnouncePeerResponse_Response))
}

// MockisAnnouncePeerResponse_Errordetails is a mock of isAnnouncePeerResponse_Errordetails interface.
type MockisAnnouncePeerResponse_Errordetails struct {
	ctrl     *gomock.Controller
	recorder *MockisAnnouncePeerResponse_ErrordetailsMockRecorder
}

// MockisAnnouncePeerResponse_ErrordetailsMockRecorder is the mock recorder for MockisAnnouncePeerResponse_Errordetails.
type MockisAnnouncePeerResponse_ErrordetailsMockRecorder struct {
	mock *MockisAnnouncePeerResponse_Errordetails
}

// NewMockisAnnouncePeerResponse_Errordetails creates a new mock instance.
func NewMockisAnnouncePeerResponse_Errordetails(ctrl *gomock.Controller) *MockisAnnouncePeerResponse_Errordetails {
	mock := &MockisAnnouncePeerResponse_Errordetails{ctrl: ctrl}
	mock.recorder = &MockisAnnouncePeerResponse_ErrordetailsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockisAnnouncePeerResponse_Errordetails) EXPECT() *MockisAnnouncePeerResponse_ErrordetailsMockRecorder {
	return m.recorder
}

// isAnnouncePeerResponse_Errordetails mocks base method.
func (m *MockisAnnouncePeerResponse_Errordetails) isAnnouncePeerResponse_Errordetails() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "isAnnouncePeerResponse_Errordetails")
}

// isAnnouncePeerResponse_Errordetails indicates an expected call of isAnnouncePeerResponse_Errordetails.
func (mr *MockisAnnouncePeerResponse_ErrordetailsMockRecorder) isAnnouncePeerResponse_Errordetails() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "isAnnouncePeerResponse_Errordetails", reflect.TypeOf((*MockisAnnouncePeerResponse_Errordetails)(nil).isAnnouncePeerResponse_Errordetails))
}
