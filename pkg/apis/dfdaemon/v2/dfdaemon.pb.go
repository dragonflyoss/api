//
//     Copyright 2022 The Dragonfly Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: pkg/apis/dfdaemon/v2/dfdaemon.proto

package v2

import (
	context "context"
	v2 "d7y.io/api/pkg/apis/common/v2"
	v21 "d7y.io/api/pkg/apis/errordetails/v2"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InterestedAllPiecesRequest represents interested all pieces request of SyncPiecesRequest.
type InterestedAllPiecesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InterestedAllPiecesRequest) Reset() {
	*x = InterestedAllPiecesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestedAllPiecesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestedAllPiecesRequest) ProtoMessage() {}

func (x *InterestedAllPiecesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestedAllPiecesRequest.ProtoReflect.Descriptor instead.
func (*InterestedAllPiecesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescGZIP(), []int{0}
}

// InterestedPiecesRequest represents interested pieces request of SyncPiecesRequest.
type InterestedPiecesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interested piece numbers.
	PieceNumbers []uint32 `protobuf:"varint,1,rep,packed,name=piece_numbers,json=pieceNumbers,proto3" json:"piece_numbers,omitempty"`
}

func (x *InterestedPiecesRequest) Reset() {
	*x = InterestedPiecesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestedPiecesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestedPiecesRequest) ProtoMessage() {}

func (x *InterestedPiecesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestedPiecesRequest.ProtoReflect.Descriptor instead.
func (*InterestedPiecesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescGZIP(), []int{1}
}

func (x *InterestedPiecesRequest) GetPieceNumbers() []uint32 {
	if x != nil {
		return x.PieceNumbers
	}
	return nil
}

// StatMetadata represents stat metadata request of SyncPiecesRequest.
type StatMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatMetadataRequest) Reset() {
	*x = StatMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatMetadataRequest) ProtoMessage() {}

func (x *StatMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatMetadataRequest.ProtoReflect.Descriptor instead.
func (*StatMetadataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescGZIP(), []int{2}
}

// SyncPiecesRequest represents request of AnnouncePeer.
type SyncPiecesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*SyncPiecesRequest_InterestedAllPiecesRequest
	//	*SyncPiecesRequest_InterestedPiecesRequest
	//	*SyncPiecesRequest_StatMetadataRequest
	Request isSyncPiecesRequest_Request `protobuf_oneof:"request"`
}

func (x *SyncPiecesRequest) Reset() {
	*x = SyncPiecesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPiecesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPiecesRequest) ProtoMessage() {}

func (x *SyncPiecesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPiecesRequest.ProtoReflect.Descriptor instead.
func (*SyncPiecesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescGZIP(), []int{3}
}

func (m *SyncPiecesRequest) GetRequest() isSyncPiecesRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *SyncPiecesRequest) GetInterestedAllPiecesRequest() *InterestedAllPiecesRequest {
	if x, ok := x.GetRequest().(*SyncPiecesRequest_InterestedAllPiecesRequest); ok {
		return x.InterestedAllPiecesRequest
	}
	return nil
}

func (x *SyncPiecesRequest) GetInterestedPiecesRequest() *InterestedPiecesRequest {
	if x, ok := x.GetRequest().(*SyncPiecesRequest_InterestedPiecesRequest); ok {
		return x.InterestedPiecesRequest
	}
	return nil
}

func (x *SyncPiecesRequest) GetStatMetadataRequest() *StatMetadataRequest {
	if x, ok := x.GetRequest().(*SyncPiecesRequest_StatMetadataRequest); ok {
		return x.StatMetadataRequest
	}
	return nil
}

type isSyncPiecesRequest_Request interface {
	isSyncPiecesRequest_Request()
}

type SyncPiecesRequest_InterestedAllPiecesRequest struct {
	InterestedAllPiecesRequest *InterestedAllPiecesRequest `protobuf:"bytes,1,opt,name=interested_all_pieces_request,json=interestedAllPiecesRequest,proto3,oneof"`
}

type SyncPiecesRequest_InterestedPiecesRequest struct {
	InterestedPiecesRequest *InterestedPiecesRequest `protobuf:"bytes,2,opt,name=interested_pieces_request,json=interestedPiecesRequest,proto3,oneof"`
}

type SyncPiecesRequest_StatMetadataRequest struct {
	StatMetadataRequest *StatMetadataRequest `protobuf:"bytes,3,opt,name=stat_metadata_request,json=statMetadataRequest,proto3,oneof"`
}

func (*SyncPiecesRequest_InterestedAllPiecesRequest) isSyncPiecesRequest_Request() {}

func (*SyncPiecesRequest_InterestedPiecesRequest) isSyncPiecesRequest_Request() {}

func (*SyncPiecesRequest_StatMetadataRequest) isSyncPiecesRequest_Request() {}

// InterestedPiecesResponse represents interested pieces response of SyncPiecesResponse.
type InterestedPiecesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interested pieces of task.
	Pieces []*v2.Piece `protobuf:"bytes,1,rep,name=pieces,proto3" json:"pieces,omitempty"`
}

func (x *InterestedPiecesResponse) Reset() {
	*x = InterestedPiecesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestedPiecesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestedPiecesResponse) ProtoMessage() {}

func (x *InterestedPiecesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestedPiecesResponse.ProtoReflect.Descriptor instead.
func (*InterestedPiecesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescGZIP(), []int{4}
}

func (x *InterestedPiecesResponse) GetPieces() []*v2.Piece {
	if x != nil {
		return x.Pieces
	}
	return nil
}

// StatMetadata represents stat metadata request of SyncPiecesResponse.
type StatMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task metadata.
	Metadata *v2.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *StatMetadataResponse) Reset() {
	*x = StatMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatMetadataResponse) ProtoMessage() {}

func (x *StatMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatMetadataResponse.ProtoReflect.Descriptor instead.
func (*StatMetadataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescGZIP(), []int{5}
}

func (x *StatMetadataResponse) GetMetadata() *v2.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// SyncPiecesResponse represents response of SyncPieces.
type SyncPiecesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*SyncPiecesResponse_InterestedPiecesResponse
	//	*SyncPiecesResponse_StatMetadataResponse
	Response isSyncPiecesResponse_Response `protobuf_oneof:"response"`
	// Types that are assignable to Errordetails:
	//	*SyncPiecesResponse_SyncPiecesFailed
	//	*SyncPiecesResponse_StatMetadataFailed
	Errordetails isSyncPiecesResponse_Errordetails `protobuf_oneof:"errordetails"`
}

func (x *SyncPiecesResponse) Reset() {
	*x = SyncPiecesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPiecesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPiecesResponse) ProtoMessage() {}

func (x *SyncPiecesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPiecesResponse.ProtoReflect.Descriptor instead.
func (*SyncPiecesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescGZIP(), []int{6}
}

func (m *SyncPiecesResponse) GetResponse() isSyncPiecesResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SyncPiecesResponse) GetInterestedPiecesResponse() *InterestedPiecesResponse {
	if x, ok := x.GetResponse().(*SyncPiecesResponse_InterestedPiecesResponse); ok {
		return x.InterestedPiecesResponse
	}
	return nil
}

func (x *SyncPiecesResponse) GetStatMetadataResponse() *StatMetadataResponse {
	if x, ok := x.GetResponse().(*SyncPiecesResponse_StatMetadataResponse); ok {
		return x.StatMetadataResponse
	}
	return nil
}

func (m *SyncPiecesResponse) GetErrordetails() isSyncPiecesResponse_Errordetails {
	if m != nil {
		return m.Errordetails
	}
	return nil
}

func (x *SyncPiecesResponse) GetSyncPiecesFailed() *v21.SyncPiecesFailed {
	if x, ok := x.GetErrordetails().(*SyncPiecesResponse_SyncPiecesFailed); ok {
		return x.SyncPiecesFailed
	}
	return nil
}

func (x *SyncPiecesResponse) GetStatMetadataFailed() *v21.StatMetadataFailed {
	if x, ok := x.GetErrordetails().(*SyncPiecesResponse_StatMetadataFailed); ok {
		return x.StatMetadataFailed
	}
	return nil
}

type isSyncPiecesResponse_Response interface {
	isSyncPiecesResponse_Response()
}

type SyncPiecesResponse_InterestedPiecesResponse struct {
	InterestedPiecesResponse *InterestedPiecesResponse `protobuf:"bytes,1,opt,name=interested_pieces_response,json=interestedPiecesResponse,proto3,oneof"`
}

type SyncPiecesResponse_StatMetadataResponse struct {
	StatMetadataResponse *StatMetadataResponse `protobuf:"bytes,2,opt,name=stat_metadata_response,json=statMetadataResponse,proto3,oneof"`
}

func (*SyncPiecesResponse_InterestedPiecesResponse) isSyncPiecesResponse_Response() {}

func (*SyncPiecesResponse_StatMetadataResponse) isSyncPiecesResponse_Response() {}

type isSyncPiecesResponse_Errordetails interface {
	isSyncPiecesResponse_Errordetails()
}

type SyncPiecesResponse_SyncPiecesFailed struct {
	SyncPiecesFailed *v21.SyncPiecesFailed `protobuf:"bytes,3,opt,name=sync_pieces_failed,json=syncPiecesFailed,proto3,oneof"`
}

type SyncPiecesResponse_StatMetadataFailed struct {
	StatMetadataFailed *v21.StatMetadataFailed `protobuf:"bytes,4,opt,name=stat_metadata_failed,json=statMetadataFailed,proto3,oneof"`
}

func (*SyncPiecesResponse_SyncPiecesFailed) isSyncPiecesResponse_Errordetails() {}

func (*SyncPiecesResponse_StatMetadataFailed) isSyncPiecesResponse_Errordetails() {}

// TriggerTaskRequest represents request of TriggerTask.
type TriggerTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task id.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Task metadata.
	Metadata *v2.Metadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *TriggerTaskRequest) Reset() {
	*x = TriggerTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerTaskRequest) ProtoMessage() {}

func (x *TriggerTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerTaskRequest.ProtoReflect.Descriptor instead.
func (*TriggerTaskRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescGZIP(), []int{7}
}

func (x *TriggerTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TriggerTaskRequest) GetMetadata() *v2.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// StatTaskRequest represents request of StatTask.
type StatTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task id.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *StatTaskRequest) Reset() {
	*x = StatTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatTaskRequest) ProtoMessage() {}

func (x *StatTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatTaskRequest.ProtoReflect.Descriptor instead.
func (*StatTaskRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescGZIP(), []int{8}
}

func (x *StatTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// StatTaskResponse represents response of StatTask.
type StatTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *v2.Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *StatTaskResponse) Reset() {
	*x = StatTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatTaskResponse) ProtoMessage() {}

func (x *StatTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatTaskResponse.ProtoReflect.Descriptor instead.
func (*StatTaskResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescGZIP(), []int{9}
}

func (x *StatTaskResponse) GetTask() *v2.Task {
	if x != nil {
		return x.Task
	}
	return nil
}

var File_pkg_apis_dfdaemon_v2_dfdaemon_proto protoreflect.FileDescriptor

var file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x66, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x66, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x64, 0x66, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x1a,
	0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2b, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x1a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x41, 0x6c, 0x6c, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x48, 0x0a, 0x17, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50,
	0x69, 0x65, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0d,
	0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x70,
	0x69, 0x65, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x53,
	0x74, 0x61, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xc4, 0x02, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x1d, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x64, 0x66, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x66, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x69, 0x65, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x15, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x66, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73, 0x74, 0x61, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0e, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x4d, 0x0a, 0x18, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x70, 0x69, 0x65, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x69, 0x65, 0x63, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x70, 0x69, 0x65, 0x63, 0x65, 0x73, 0x22, 0x4e, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x03, 0x0a, 0x12, 0x53, 0x79, 0x6e,
	0x63, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x62, 0x0a, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x69,
	0x65, 0x63, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x66, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x16, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x66, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x73, 0x74, 0x61, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x12, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x01, 0x52, 0x10, 0x73, 0x79, 0x6e, 0x63, 0x50,
	0x69, 0x65, 0x63, 0x65, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x14, 0x73,
	0x74, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x01, 0x52, 0x12, 0x73,
	0x74, 0x61, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x42, 0x0f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x03, 0xf8,
	0x42, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x6e, 0x0a, 0x12, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x33, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x32, 0xd1, 0x01, 0x0a, 0x08, 0x44, 0x66, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x69, 0x65, 0x63,
	0x65, 0x73, 0x12, 0x1b, 0x2e, 0x64, 0x66, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x64, 0x66, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x50,
	0x69, 0x65, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x43, 0x0a, 0x0b, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x1c, 0x2e, 0x64, 0x66, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x19, 0x2e, 0x64, 0x66, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x21, 0x5a, 0x1f, 0x64,
	0x37, 0x79, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x64, 0x66, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescOnce sync.Once
	file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescData = file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDesc
)

func file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescGZIP() []byte {
	file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescOnce.Do(func() {
		file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescData)
	})
	return file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDescData
}

var file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pkg_apis_dfdaemon_v2_dfdaemon_proto_goTypes = []interface{}{
	(*InterestedAllPiecesRequest)(nil), // 0: dfdaemon.InterestedAllPiecesRequest
	(*InterestedPiecesRequest)(nil),    // 1: dfdaemon.InterestedPiecesRequest
	(*StatMetadataRequest)(nil),        // 2: dfdaemon.StatMetadataRequest
	(*SyncPiecesRequest)(nil),          // 3: dfdaemon.SyncPiecesRequest
	(*InterestedPiecesResponse)(nil),   // 4: dfdaemon.InterestedPiecesResponse
	(*StatMetadataResponse)(nil),       // 5: dfdaemon.StatMetadataResponse
	(*SyncPiecesResponse)(nil),         // 6: dfdaemon.SyncPiecesResponse
	(*TriggerTaskRequest)(nil),         // 7: dfdaemon.TriggerTaskRequest
	(*StatTaskRequest)(nil),            // 8: dfdaemon.StatTaskRequest
	(*StatTaskResponse)(nil),           // 9: dfdaemon.StatTaskResponse
	(*v2.Piece)(nil),                   // 10: common.Piece
	(*v2.Metadata)(nil),                // 11: common.Metadata
	(*v21.SyncPiecesFailed)(nil),       // 12: errordetails.SyncPiecesFailed
	(*v21.StatMetadataFailed)(nil),     // 13: errordetails.StatMetadataFailed
	(*v2.Task)(nil),                    // 14: common.Task
	(*emptypb.Empty)(nil),              // 15: google.protobuf.Empty
}
var file_pkg_apis_dfdaemon_v2_dfdaemon_proto_depIdxs = []int32{
	0,  // 0: dfdaemon.SyncPiecesRequest.interested_all_pieces_request:type_name -> dfdaemon.InterestedAllPiecesRequest
	1,  // 1: dfdaemon.SyncPiecesRequest.interested_pieces_request:type_name -> dfdaemon.InterestedPiecesRequest
	2,  // 2: dfdaemon.SyncPiecesRequest.stat_metadata_request:type_name -> dfdaemon.StatMetadataRequest
	10, // 3: dfdaemon.InterestedPiecesResponse.pieces:type_name -> common.Piece
	11, // 4: dfdaemon.StatMetadataResponse.metadata:type_name -> common.Metadata
	4,  // 5: dfdaemon.SyncPiecesResponse.interested_pieces_response:type_name -> dfdaemon.InterestedPiecesResponse
	5,  // 6: dfdaemon.SyncPiecesResponse.stat_metadata_response:type_name -> dfdaemon.StatMetadataResponse
	12, // 7: dfdaemon.SyncPiecesResponse.sync_pieces_failed:type_name -> errordetails.SyncPiecesFailed
	13, // 8: dfdaemon.SyncPiecesResponse.stat_metadata_failed:type_name -> errordetails.StatMetadataFailed
	11, // 9: dfdaemon.TriggerTaskRequest.metadata:type_name -> common.Metadata
	14, // 10: dfdaemon.StatTaskResponse.task:type_name -> common.Task
	3,  // 11: dfdaemon.Dfdaemon.SyncPieces:input_type -> dfdaemon.SyncPiecesRequest
	7,  // 12: dfdaemon.Dfdaemon.TriggerTask:input_type -> dfdaemon.TriggerTaskRequest
	8,  // 13: dfdaemon.Dfdaemon.StatTask:input_type -> dfdaemon.StatTaskRequest
	6,  // 14: dfdaemon.Dfdaemon.SyncPieces:output_type -> dfdaemon.SyncPiecesResponse
	15, // 15: dfdaemon.Dfdaemon.TriggerTask:output_type -> google.protobuf.Empty
	14, // 16: dfdaemon.Dfdaemon.StatTask:output_type -> common.Task
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_pkg_apis_dfdaemon_v2_dfdaemon_proto_init() }
func file_pkg_apis_dfdaemon_v2_dfdaemon_proto_init() {
	if File_pkg_apis_dfdaemon_v2_dfdaemon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestedAllPiecesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestedPiecesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPiecesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestedPiecesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPiecesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SyncPiecesRequest_InterestedAllPiecesRequest)(nil),
		(*SyncPiecesRequest_InterestedPiecesRequest)(nil),
		(*SyncPiecesRequest_StatMetadataRequest)(nil),
	}
	file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*SyncPiecesResponse_InterestedPiecesResponse)(nil),
		(*SyncPiecesResponse_StatMetadataResponse)(nil),
		(*SyncPiecesResponse_SyncPiecesFailed)(nil),
		(*SyncPiecesResponse_StatMetadataFailed)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_apis_dfdaemon_v2_dfdaemon_proto_goTypes,
		DependencyIndexes: file_pkg_apis_dfdaemon_v2_dfdaemon_proto_depIdxs,
		MessageInfos:      file_pkg_apis_dfdaemon_v2_dfdaemon_proto_msgTypes,
	}.Build()
	File_pkg_apis_dfdaemon_v2_dfdaemon_proto = out.File
	file_pkg_apis_dfdaemon_v2_dfdaemon_proto_rawDesc = nil
	file_pkg_apis_dfdaemon_v2_dfdaemon_proto_goTypes = nil
	file_pkg_apis_dfdaemon_v2_dfdaemon_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DfdaemonClient is the client API for Dfdaemon service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DfdaemonClient interface {
	// SyncPieces syncs pieces from the other peers.
	SyncPieces(ctx context.Context, opts ...grpc.CallOption) (Dfdaemon_SyncPiecesClient, error)
	// TriggerTask triggers task back-to-source download.
	TriggerTask(ctx context.Context, in *TriggerTaskRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// StatTask stats task information.
	StatTask(ctx context.Context, in *StatTaskRequest, opts ...grpc.CallOption) (*v2.Task, error)
}

type dfdaemonClient struct {
	cc grpc.ClientConnInterface
}

func NewDfdaemonClient(cc grpc.ClientConnInterface) DfdaemonClient {
	return &dfdaemonClient{cc}
}

func (c *dfdaemonClient) SyncPieces(ctx context.Context, opts ...grpc.CallOption) (Dfdaemon_SyncPiecesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Dfdaemon_serviceDesc.Streams[0], "/dfdaemon.Dfdaemon/SyncPieces", opts...)
	if err != nil {
		return nil, err
	}
	x := &dfdaemonSyncPiecesClient{stream}
	return x, nil
}

type Dfdaemon_SyncPiecesClient interface {
	Send(*SyncPiecesRequest) error
	Recv() (*SyncPiecesResponse, error)
	grpc.ClientStream
}

type dfdaemonSyncPiecesClient struct {
	grpc.ClientStream
}

func (x *dfdaemonSyncPiecesClient) Send(m *SyncPiecesRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dfdaemonSyncPiecesClient) Recv() (*SyncPiecesResponse, error) {
	m := new(SyncPiecesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dfdaemonClient) TriggerTask(ctx context.Context, in *TriggerTaskRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/dfdaemon.Dfdaemon/TriggerTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dfdaemonClient) StatTask(ctx context.Context, in *StatTaskRequest, opts ...grpc.CallOption) (*v2.Task, error) {
	out := new(v2.Task)
	err := c.cc.Invoke(ctx, "/dfdaemon.Dfdaemon/StatTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DfdaemonServer is the server API for Dfdaemon service.
type DfdaemonServer interface {
	// SyncPieces syncs pieces from the other peers.
	SyncPieces(Dfdaemon_SyncPiecesServer) error
	// TriggerTask triggers task back-to-source download.
	TriggerTask(context.Context, *TriggerTaskRequest) (*emptypb.Empty, error)
	// StatTask stats task information.
	StatTask(context.Context, *StatTaskRequest) (*v2.Task, error)
}

// UnimplementedDfdaemonServer can be embedded to have forward compatible implementations.
type UnimplementedDfdaemonServer struct {
}

func (*UnimplementedDfdaemonServer) SyncPieces(Dfdaemon_SyncPiecesServer) error {
	return status.Errorf(codes.Unimplemented, "method SyncPieces not implemented")
}
func (*UnimplementedDfdaemonServer) TriggerTask(context.Context, *TriggerTaskRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerTask not implemented")
}
func (*UnimplementedDfdaemonServer) StatTask(context.Context, *StatTaskRequest) (*v2.Task, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatTask not implemented")
}

func RegisterDfdaemonServer(s *grpc.Server, srv DfdaemonServer) {
	s.RegisterService(&_Dfdaemon_serviceDesc, srv)
}

func _Dfdaemon_SyncPieces_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DfdaemonServer).SyncPieces(&dfdaemonSyncPiecesServer{stream})
}

type Dfdaemon_SyncPiecesServer interface {
	Send(*SyncPiecesResponse) error
	Recv() (*SyncPiecesRequest, error)
	grpc.ServerStream
}

type dfdaemonSyncPiecesServer struct {
	grpc.ServerStream
}

func (x *dfdaemonSyncPiecesServer) Send(m *SyncPiecesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dfdaemonSyncPiecesServer) Recv() (*SyncPiecesRequest, error) {
	m := new(SyncPiecesRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Dfdaemon_TriggerTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TriggerTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DfdaemonServer).TriggerTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfdaemon.Dfdaemon/TriggerTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DfdaemonServer).TriggerTask(ctx, req.(*TriggerTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dfdaemon_StatTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DfdaemonServer).StatTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfdaemon.Dfdaemon/StatTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DfdaemonServer).StatTask(ctx, req.(*StatTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dfdaemon_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dfdaemon.Dfdaemon",
	HandlerType: (*DfdaemonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TriggerTask",
			Handler:    _Dfdaemon_TriggerTask_Handler,
		},
		{
			MethodName: "StatTask",
			Handler:    _Dfdaemon_StatTask_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SyncPieces",
			Handler:       _Dfdaemon_SyncPieces_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pkg/apis/dfdaemon/v2/dfdaemon.proto",
}
