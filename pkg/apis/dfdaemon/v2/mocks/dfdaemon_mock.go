// Code generated by MockGen. DO NOT EDIT.
// Source: ../dfdaemon.pb.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockisSyncPiecesRequest_Request is a mock of isSyncPiecesRequest_Request interface.
type MockisSyncPiecesRequest_Request struct {
	ctrl     *gomock.Controller
	recorder *MockisSyncPiecesRequest_RequestMockRecorder
}

// MockisSyncPiecesRequest_RequestMockRecorder is the mock recorder for MockisSyncPiecesRequest_Request.
type MockisSyncPiecesRequest_RequestMockRecorder struct {
	mock *MockisSyncPiecesRequest_Request
}

// NewMockisSyncPiecesRequest_Request creates a new mock instance.
func NewMockisSyncPiecesRequest_Request(ctrl *gomock.Controller) *MockisSyncPiecesRequest_Request {
	mock := &MockisSyncPiecesRequest_Request{ctrl: ctrl}
	mock.recorder = &MockisSyncPiecesRequest_RequestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockisSyncPiecesRequest_Request) EXPECT() *MockisSyncPiecesRequest_RequestMockRecorder {
	return m.recorder
}

// isSyncPiecesRequest_Request mocks base method.
func (m *MockisSyncPiecesRequest_Request) isSyncPiecesRequest_Request() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "isSyncPiecesRequest_Request")
}

// isSyncPiecesRequest_Request indicates an expected call of isSyncPiecesRequest_Request.
func (mr *MockisSyncPiecesRequest_RequestMockRecorder) isSyncPiecesRequest_Request() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "isSyncPiecesRequest_Request", reflect.TypeOf((*MockisSyncPiecesRequest_Request)(nil).isSyncPiecesRequest_Request))
}

// MockisSyncPiecesResponse_Response is a mock of isSyncPiecesResponse_Response interface.
type MockisSyncPiecesResponse_Response struct {
	ctrl     *gomock.Controller
	recorder *MockisSyncPiecesResponse_ResponseMockRecorder
}

// MockisSyncPiecesResponse_ResponseMockRecorder is the mock recorder for MockisSyncPiecesResponse_Response.
type MockisSyncPiecesResponse_ResponseMockRecorder struct {
	mock *MockisSyncPiecesResponse_Response
}

// NewMockisSyncPiecesResponse_Response creates a new mock instance.
func NewMockisSyncPiecesResponse_Response(ctrl *gomock.Controller) *MockisSyncPiecesResponse_Response {
	mock := &MockisSyncPiecesResponse_Response{ctrl: ctrl}
	mock.recorder = &MockisSyncPiecesResponse_ResponseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockisSyncPiecesResponse_Response) EXPECT() *MockisSyncPiecesResponse_ResponseMockRecorder {
	return m.recorder
}

// isSyncPiecesResponse_Response mocks base method.
func (m *MockisSyncPiecesResponse_Response) isSyncPiecesResponse_Response() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "isSyncPiecesResponse_Response")
}

// isSyncPiecesResponse_Response indicates an expected call of isSyncPiecesResponse_Response.
func (mr *MockisSyncPiecesResponse_ResponseMockRecorder) isSyncPiecesResponse_Response() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "isSyncPiecesResponse_Response", reflect.TypeOf((*MockisSyncPiecesResponse_Response)(nil).isSyncPiecesResponse_Response))
}

// MockisSyncPiecesResponse_Errordetails is a mock of isSyncPiecesResponse_Errordetails interface.
type MockisSyncPiecesResponse_Errordetails struct {
	ctrl     *gomock.Controller
	recorder *MockisSyncPiecesResponse_ErrordetailsMockRecorder
}

// MockisSyncPiecesResponse_ErrordetailsMockRecorder is the mock recorder for MockisSyncPiecesResponse_Errordetails.
type MockisSyncPiecesResponse_ErrordetailsMockRecorder struct {
	mock *MockisSyncPiecesResponse_Errordetails
}

// NewMockisSyncPiecesResponse_Errordetails creates a new mock instance.
func NewMockisSyncPiecesResponse_Errordetails(ctrl *gomock.Controller) *MockisSyncPiecesResponse_Errordetails {
	mock := &MockisSyncPiecesResponse_Errordetails{ctrl: ctrl}
	mock.recorder = &MockisSyncPiecesResponse_ErrordetailsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockisSyncPiecesResponse_Errordetails) EXPECT() *MockisSyncPiecesResponse_ErrordetailsMockRecorder {
	return m.recorder
}

// isSyncPiecesResponse_Errordetails mocks base method.
func (m *MockisSyncPiecesResponse_Errordetails) isSyncPiecesResponse_Errordetails() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "isSyncPiecesResponse_Errordetails")
}

// isSyncPiecesResponse_Errordetails indicates an expected call of isSyncPiecesResponse_Errordetails.
func (mr *MockisSyncPiecesResponse_ErrordetailsMockRecorder) isSyncPiecesResponse_Errordetails() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "isSyncPiecesResponse_Errordetails", reflect.TypeOf((*MockisSyncPiecesResponse_Errordetails)(nil).isSyncPiecesResponse_Errordetails))
}
