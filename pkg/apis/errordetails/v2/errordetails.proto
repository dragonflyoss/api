/*
 *     Copyright 2022 The Dragonfly Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package errordetails;

import "validate/validate.proto";
import "pkg/apis/common/v2/common.proto";

option go_package = "d7y.io/api/pkg/apis/errordetails/v2";

// PeerDownloadBackToSourceFailed is error detail of downloading back-to-source.
message PeerDownloadBackToSourceFailed {
  // Temporary recoverable error of source.
  bool temporary = 1;
  // Source response metadata, eg: HTTP Status Code, HTTP Status, HTTP Header
  common.ExtendAttribute metadata = 2;
  // The description of the error.
  string description = 3;
}

// PieceDownloadFailed is error detail of downloading piece.
message PieceDownloadFailed {
  // Temporary recoverable error of parent peer.
  bool temporary = 1;
	// Parent peer id.
  string parent_id = 2 [(validate.rules).string.min_len = 1];
  // The description of the error.
  string description = 3;
}

// PieceInfoSyncFailed is error detail of syncing piece info.
message PieceInfoSyncFailed {
  // Temporary recoverable error of parent peer.
  bool temporary = 1;
	// Parent peer id.
  string parent_id = 2 [(validate.rules).string.min_len = 1];
  // The description of the error.
  string description = 3;
}

// ScheduleFailed is error detail of scheduling.
message ScheduleFailed {
  // The description of the error.
  string description = 1;
}
